kind: pipeline
type: docker
name: integration

steps:
  - name: code-analysis
    image: boulundeasv/dotnet-sdk-with-java
    environment:
      SONARSECRET:
        from_secret: SonarQubeSecret
    commands:
      - exit 0
      - dotnet sonarscanner begin
        /k:"easv-devops_KLT-Exam_AY8HIPrmEVvRW2O60E0H"
        /d:sonar.host.url="http://sonar.setgo.dk:9000"
        /d:sonar.token="$SONARSECRET"
        /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
        /d:sonar.qualitygate.wait=true
      - dotnet build --no-incremental
      - dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
      - dotnet sonarscanner end /d:sonar.token="$SONARSECRET"

---

kind: pipeline
type: docker
name: DeliverToTesting
depends_on:
  - integration

steps:
  - name: publish api
    image: plugins/docker
    settings:
      username:
        from_secret: DockerUsername
      password:
        from_secret: DockerPassword
      context: ./backend
      dockerfile: backend/api/Dockerfile
      repo: hoeeg79/address-book-api
      tags:
        - staging

  - name: publish frontend
    image: plugins/docker
    settings:
      username:
        from_secret: DockerUsername
      password:
        from_secret: DockerPassword
      context: Frontend
      dockerfile: Frontend/Dockerfile
      repo: hoeeg79/address-book-frontend
      tags:
        - staging

  - name: trigger update
    image: curlimages/curl
    environment:
      WATCHTOWER_HTTP_API_TOKEN: watchtower_token
    commands:
      - "curl --fail -X GET 'http://144.91.64.53:8080/v1/update' -H 'Authorization: Bearer %{WATCHTOWER_TOKEN}'" # Must match the token defined in docker-compose.yml
      - sleep 10
    depends_on:
      - publish api
      - publish frontend
