kind: pipeline
type: docker
name: integration

steps:
  - name: code-analysis
    image: boulundeasv/dotnet-sdk-with-java
    environment:
      SONARSECRET:
        from_secret: SonarQubeSecret
      PGPASSWORD:
        from_secret: PostgresPassword
      seq:
        from_secret: seq
    commands:
      #- exit 0
      - dotnet sonarscanner begin
        /k:"easv-devops_KLT-Exam_AY8HIPrmEVvRW2O60E0H"
        /d:sonar.host.url="http://sonar.setgo.dk:9000"
        /d:sonar.token="$SONARSECRET"
        /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
        /d:sonar.qualitygate.wait=true
      - dotnet build --no-incremental
      - dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
      - dotnet sonarscanner end /d:sonar.token="$SONARSECRET"

---

kind: pipeline
type: docker
name: DeliverToTesting
depends_on:
  - integration

steps:
  - name: publish api
    image: plugins/docker
    settings:
      username:
        from_secret: DockerUsername
      password:
        from_secret: DockerPassword
      context: ./backend
      dockerfile: backend/api/Dockerfile
      repo: hoeeg79/address-book-api
      tags:
        - staging

  - name: publish frontend
    image: plugins/docker
    environment:
      TARGET: "test"
    settings:
      username:
        from_secret: DockerUsername
      password:
        from_secret: DockerPassword
      context: Frontend
      dockerfile: Frontend/Dockerfile
      repo: hoeeg79/address-book-frontend
      tags:
        - staging

  - name: trigger update
    image: curlimages/curl
    environment:
      WATCHTOWER_HTTP_API_TOKEN: 
        from_secret: watchtower_token
    commands:
      - echo $WATCHTOWER_HTTP_API_TOKEN
      - "curl --fail -X GET \"http://144.91.64.53:8080/v1/update\" -H \"Authorization: Bearer $WATCHTOWER_HTTP_API_TOKEN\"" # Must match the token defined in docker-compose.yml
      - sleep 10
    depends_on:
      - publish frontend
      - publish api
        
  - name: update database
    image: flyway/flyway
    environment: 
        POSTGRES_USER: 
          from_secret: PostgresUser
        POSTGRES_PASSWORD: 
          from_secret: PostgresPassword
    commands:
      - flyway migrate
        -url=jdbc:postgresql://144.91.64.53:5432/postgres
        -user="$POSTGRES_USER"
        -password="$POSTGRES_PASSWORD"
        -locations=filesystem:./db/DbMigrations
    depends_on:
      - trigger update

  - name: end-to-end tests
    image: testcafe/testcafe
    commands:
      - testcafe firefox:headless Test/TestCafe.js
    depends_on:
      - update database

  - name: performance tests
    image: grafana/k6
    commands:
      - k6 run Test/spike_test.js
      - k6 run Test/StressTest.js
      - k6 run Test/load_test.js
    depends_on:
      - end-to-end tests

---

kind: pipeline
type: docker
name: DeliverToProduction
depends_on:
  - DeliverToTesting

steps:
  - name: publish api
    image: plugins/docker
    settings:
      username:
        from_secret: DockerUsername
      password:
        from_secret: DockerPassword
      context: ./backend
      dockerfile: backend/api/Dockerfile
      repo: hoeeg79/address-book-api
      tags:
        - prod

  - name: publish frontend
    image: plugins/docker
    environment:
      TARGET: "production"
    settings:
      username:
        from_secret: DockerUsername
      password:
        from_secret: DockerPassword
      context: Frontend
      dockerfile: Frontend/Dockerfile.prod
      repo: hoeeg79/address-book-frontend
      tags:
        - prod

  - name: trigger update
    image: curlimages/curl
    environment:
      WATCHTOWER_HTTP_API_TOKEN:
        from_secret: watchtower_token
    commands:
      - echo $WATCHTOWER_HTTP_API_TOKEN
      - "curl --fail -X GET \"http://144.91.74.225:8080/v1/update\" -H \"Authorization: Bearer $WATCHTOWER_HTTP_API_TOKEN\"" # Must match the token defined in docker-compose.yml
      - sleep 10
    depends_on:
      - publish frontend
      - publish api

  - name: update database
    image: flyway/flyway
    environment:
      POSTGRES_USER:
        from_secret: PostgresUser
      POSTGRES_PASSWORD:
        from_secret: PostgresPassword
    commands:
      - flyway migrate
        -url=jdbc:postgresql://144.91.74.225:5432/postgres
        -user="$POSTGRES_USER"
        -password="$POSTGRES_PASSWORD"
        -locations=filesystem:./db/DbMigrations
    depends_on:
      - trigger update

trigger:
  branch:
    - main